@namespace Blazor.AdminLte
@inject IJSRuntime JS  
<li class="nav-item has-treeview menu-@(menuState)">
    <a @ref="menu" href="javascript:void(0);" class='nav-link' @onclick="OnClick">
        <i class="nav-icon @Icon"></i>
        <p>
            @Title
            <i class="right fas @chevron"></i>
        </p>
    </a>
    <ul @ref="ul" class="nav nav-treeview" @onclick="SetActive">
        @Items
    </ul>
</li>
@code {
    [Parameter]
    public string Icon { get; set; }
    [Parameter]
    public RenderFragment Title { get; set; }
    [Parameter]
    public RenderFragment Items { get; set; }

    private MenuState _menuState { get; set; }

    private MenuState MenuState {
        get {
            return _menuState;
        } set {
            if (_menuState == value)
                return;
            JS.InvokeVoidAsync("toggleSideMenu", ul);
            _menuState = value;
        }
    }

    public void SetActive()
    {
       // JS.InvokeVoidAsync("activateSideMenu", menu);
    }

    private string menuState => MenuState.GetDescription<StyleAttribute>();
    private string chevron { get; set; } = "fa-angle-left";

    private ElementReference ul { get; set; }
    private ElementReference menu { get; set; }

    private void OnClick()
    {
        MenuState = MenuState == MenuState.Open ? MenuState.Closed : MenuState.Open;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
    }
}
